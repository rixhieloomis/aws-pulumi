---
- name: Ensure AWS CLI is installed
  hosts: your_target_hosts
  vars:
    region: "eu-west-1"
    rolename: "StackGuardian"
    external_id: "external_id"
  tasks:
    - name: Check if AWS CLI is installed
      command: aws --version
      ignore_errors: true
      register: aws_cli_check

    - name: Install AWS CLI if not present
      when: aws_cli_check.rc != 0
      apk:
        name: aws-cli
        state: present
        update_cache: yes

- name: Create AWS Config and Credentials files
  hosts: localhost
  tasks:
    - name: Read input lines from file
      slurp:
        src: "/tmp/STACKGUARDIAN_WORKSPACE/artifacts/input.txt"
      register: input_content

    - name: Process input lines and create config and credentials files
      set_fact:
        input_lines: "{{ input_content.content | b64decode | regex_replace('\\r\\n|\\r|\\n', '\\n') | split('\n') }}"
      changed_when: false

    - name: Generate AWS config file content
      set_fact:
        aws_config_content: |
          [profile {{ item.split(' : ')[0] }}]
          region = {{ region }}
          role_arn = arn:aws:iam::{{ item.split(' : ')[0] }}:role/{{ rolename }}
          external_id= {{ external_id}}
      with_items: "{{ input_lines }}"
      register: aws_config_content

    - name: Create AWS config file
      copy:
        content: "{{ aws_config_content.results | map(attribute='ansible_facts.aws_config_content') | join('\n') }}"
        dest: "/tmp/STACKGUARDIAN_WORKSPACE/config"
      delegate_to: localhost

    - name: Get attached instances and filter by running state
      command: "aws ec2 describe-volumes --region {{ region }} --volume-ids {{ item.split(' : ')[1] }} --query 'Volumes[0].Attachments[?State==`attached`].InstanceId' --output text --profile {{ item.split(' : ')[0] }}"
      loop: "{{ input_lines }}"
      register: instance_ids
      changed_when: false
      ignore_errors: true

    - name: Generate output file with running instances
      template:
        src: templates/output.txt.j2
        dest: "/tmp/STACKGUARDIAN_WORKSPACE/artifacts/output.txt"
      delegate_to: localhost
